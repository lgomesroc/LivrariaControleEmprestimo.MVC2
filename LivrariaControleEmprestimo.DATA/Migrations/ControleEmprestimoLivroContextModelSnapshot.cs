// <auto-generated />
using System;
using LivrariaControleEmprestimo.DATA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivrariaControleEmprestimo.DATA.Migrations
{
    [DbContext(typeof(ControleEmprestimoLivroContext))]
    partial class ControleEmprestimoLivroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CliBairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cliBairro");

                    b.Property<string>("CliCidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cliCidade");

                    b.Property<string>("CliCpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cliCPF");

                    b.Property<string>("CliEndereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("cliEndereco");

                    b.Property<string>("CliNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("cliNome");

                    b.Property<string>("CliNumero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cliNumero");

                    b.Property<string>("CliTelefoneCelular")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cliTelefoneCelular");

                    b.Property<string>("CliTelefoneFixo")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("cliTelefoneFixo");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("LivroAnoPublicacao")
                        .HasColumnType("datetime")
                        .HasColumnName("livroAnoPublicacao");

                    b.Property<string>("LivroAutor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("livroAutor");

                    b.Property<string>("LivroEdicao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("livroEdicao");

                    b.Property<string>("LivroEditora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("livroEditora");

                    b.Property<string>("LivroNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("livroNome");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("LceDataDevolucao")
                        .HasColumnType("datetime")
                        .HasColumnName("lceDataDevolucao");

                    b.Property<DateTime?>("LceDataEmprestimo")
                        .HasColumnType("datetime")
                        .HasColumnName("lceDataEmprestimo");

                    b.Property<int?>("LceEntrega")
                        .HasColumnType("int")
                        .HasColumnName("lceEntrega");

                    b.Property<int?>("LceIdCliente")
                        .HasColumnType("int")
                        .HasColumnName("lceIdCliente");

                    b.Property<int?>("LceIdLivro")
                        .HasColumnType("int")
                        .HasColumnName("lceIdLivro");

                    b.HasKey("Id");

                    b.ToTable("Livro_Cliente_Emprestimo");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", b =>
                {
                    b.HasOne("LivrariaControleEmprestimo.DATA.Models.Cliente", "IdNavigation")
                        .WithOne("LivroClienteEmprestimo")
                        .HasForeignKey("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Cliente_Emprestimo_Cliente");

                    b.HasOne("LivrariaControleEmprestimo.DATA.Models.Livro", "Id1")
                        .WithOne("LivroClienteEmprestimo")
                        .HasForeignKey("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Cliente_Emprestimo_Livro");

                    b.Navigation("Id1");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Cliente", b =>
                {
                    b.Navigation("LivroClienteEmprestimo");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Livro", b =>
                {
                    b.Navigation("LivroClienteEmprestimo");
                });
#pragma warning restore 612, 618
        }
    }
}
